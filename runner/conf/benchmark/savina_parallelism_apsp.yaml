# @package benchmark
name: "All-Pairs Shortest Path"
params:
  num_workers: ${problem_size.apsp_num_workers}
  block_size: ${problem_size.apsp_block_size}
  max_edge_weight: 100

# target specific configuration
targets:
  akka:
    jar: "${savina_path}/target/savina-0.0.1-SNAPSHOT-jar-with-dependencies.jar"
    class: "edu.rice.habanero.benchmarks.apsp.ApspAkkaActorBenchmark"
    run_args:
      num_workers: ["-n", "<value>"]
      block_size: ["-b", "<value>"]
      max_edge_weight: ["-w", "<value>"]
  caf:
    bin: "caf_25_apsp"
    run_args:
      num_workers: ["-n", "<value>"]
      block_size: ["-b", "<value>"]
      max_edge_weight: ["-w", "<value>"]
  lf-cpp:
    copy_sources:
      - "${bench_path}/Cpp/Savina/src/parallelism"
      - "${bench_path}/Cpp/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/Cpp/Savina/src/IncludeHeaders.cmake"
      - "${bench_path}/Cpp/Savina/src/PseudoRandom.hh"
      - "${bench_path}/Cpp/Savina/src/Matrix.hh"
    lf_file: "parallelism/Apsp.lf"
    binary: "Apsp"
    gen_args: null
    run_args:
      num_workers: ["--numNodes", "<value>"]
      block_size: ["--blockSize", "<value>"]
      max_edge_weight: ["--maxEdgeWeight", "<value>"]
  lf-c:
    copy_sources:
      - "${bench_path}/C/Savina/src/BenchmarkRunner.lf"
      - "${bench_path}/C/Savina/src/parallelism"
      - "${bench_path}/C/Savina/src/lib"
    lf_file: "parallelism/Apsp.lf"
    binary: "Apsp"
    gen_args:
      num_workers: ["-D", "numNodes=<value>"]
      block_size: ["-D", "blockSize=<value>"]
      max_edge_weight: ["-D", "maxEdgeWeight=<value>"]
  lf-rust:
    copy_sources:
      - "${bench_path}/Rust/Savina/src/lib"
      - "${bench_path}/Rust/Savina/src/parallelism"
    lf_file: "parallelism/Apsp.lf"
    binary: "apsp"
    run_args:
      block_size: ["--main-block-size", "<value>"]
      max_edge_weight: ["--main-max-edge-weight", "<value>"]
      num_workers: ["--main-num-nodes", "<value>"]
