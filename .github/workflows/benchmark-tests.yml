name: Benchmark tests

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      compiler-ref:
        required: false
        type: string
      benchmarks-ref:
        required: false
        type: string

jobs:
  benchmark-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out benchmarks
        uses: actions/checkout@v3
        with:
          repository: lf-lang/benchmarks-lingua-franca
          ref: ${{ inputs.benchmarks-ref}}
      - name: Check out lingua-franca repository
        uses: actions/checkout@v3
        with:
          repository: lf-lang/lingua-franca
          submodules: true
          ref: ${{ inputs.compiler-ref }}
          path: lf
          fetch-depth: 0
      - name: Prepare build environment
        uses: ./lf/.github/actions/prepare-build-env
        with:
          lingua-franca-dir: lf
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
            python-version: '3.10'
      - name: Install Python dependencies
        run: pip3 install -r runner/requirements.txt
      - name: Build lfc
        run: |
          cd lf
          ./gradlew assemble
      - name: Set LF_PATH and LF_BENCHMARKS_PATH environmental variable
        run: |
          echo "LF_PATH=$GITHUB_WORKSPACE/lf/build/install/lf-cli" >> $GITHUB_ENV
          echo "LF_BENCHMARKS_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Test C benchmarks
        run: |
          python3 runner/run_benchmark.py -m test_mode=True iterations=1 benchmark="glob(*)" target=lf-c,lf-c-unthreaded
        if: ${{ inputs.target == 'C' }}
      - name: Compile reactor-cpp once and reuse for all benchmarks
        run: |
          mkdir -p reactor-cpp/build
          cd reactor-cpp/build
          cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_BUILD_TYPE=RelWithDebInfo -DREACTOR_CPP_VALIDATE=ON -DREACTOR_CPP_TRACE=OFF -DREACTOR_CPP_LOG_LEVEL=2  ../../lf/core/src/main/resources/lib/cpp/reactor-cpp
          make install
          echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/reactor-cpp/install/lib" >> $GITHUB_ENV
        if: ${{ inputs.target == 'Cpp' }}
      - name: Test C++ benchmarks
        run: |
          python3 runner/run_benchmark.py -m test_mode=True iterations=1 benchmark="glob(*)" target=lf-cpp iterations=1 target.params.extra_args="[--external-runtime-path, ${GITHUB_WORKSPACE}/reactor-cpp/install]"
        if: ${{ inputs.target == 'Cpp' }}
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          rustflags: "" # don't use -D warnings
        if: ${{ inputs.target == 'Rust' }}
      - name: Test Rust benchmarks
        run: |
          python3 runner/run_benchmark.py -m test_mode=True iterations=1 benchmark="glob(*)" target=lf-rust
        if: ${{ inputs.target == 'Rust' }}
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        if: ${{ inputs.target == 'TS' }}
      - name: Install pnpm
        run: npm i -g pnpm
        if: ${{ inputs.target == 'TS' }}
      - name: Cache .pnpm-store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('core/src/main/resources/lib/ts/package.json') }}
        if: ${{ inputs.target == 'TS' }}
      - name: Test TypeScript benchmarks
        run: |
          python3 runner/run_benchmark.py -m test_mode=True iterations=1 benchmark="glob(*)" target=lf-ts
        if: ${{ inputs.target == 'TS' }}
